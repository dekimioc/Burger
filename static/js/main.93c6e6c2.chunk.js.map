{"version":3,"sources":["axios-orders.js","store/actions/authentication.js","store/actions/actionTypes.js","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Forms/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Authentication/Authentication.js","containers/Authentication/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/authentication.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Forms/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","components/Logo/Logo.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Authentication/Authentication.css"],"names":["instance","axios","create","baseURL","authenticationSuccess","token","userId","type","idToken","logout","localStorage","removeItem","checkAuthenticationTimeout","expTime","dispatch","setTimeout","setAuthenticationRedirectPath","path","auxiliary","props","children","logo","react_default","a","createElement","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","NavigationItem_NavigationItem","isAuth","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","isAuthenticated","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxiliary","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Content","Component","connect","authentication","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientsAdded","ingredientsRemoved","OrderButton","ordered","purchasable","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientsSummary","textTransform","Button_Button","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","requestInter","interceptors","request","use","req","responseInter","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","purchasingHandler","onSetAuthenticationRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","objectSpread","ing","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updateStatePurchasable","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","validationError","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedOrderFormElement","target","checkValidation","rules","isValid","trim","isEmail","test","isNumeric","formElementArray","id","config","form","onSubmit","formElement","Input_Input","loading","orderData","post","orderId","purchaseBurgerSucces","purchaseBurgerFailed","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","match","component","amount","ingredientOutput","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","Order_Order","queryParams","fetchedData","fetchOrdersFail","Authentication","password","isSignup","controlName","updatedControls","defineProperty","submitHandler","onAuthentication","switchAuthenticationModeHandler","buildingBurger","authenticationRedirectPath","errorMessage","authenticationRedirect","building","authenticationData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","authenticationFailed","Logout","onLogout","App","onTryAutoSignup","route","Switch","hoc_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENTS_PRICE","salad","bacon","cheese","meat","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredient","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSucces","autneticationStart","authenticationLogout","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authenticationReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load4"],"mappings":"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","file":"static/js/main.93c6e6c2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://my-burger-app-react-de643.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authenticationStart = () => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_START\r\n    };\r\n};\r\n\r\nexport const authenticationSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SUCCES,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authenticationFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthenticationTimeout = (expTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authentication = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authenticationStart());\r\n        const authenticationData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBmPBHYh-QMCcr6TSZ6aARNCGQKbweStCU\";\r\n        if(!isSignup) {\r\n            url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBmPBHYh-QMCcr6TSZ6aARNCGQKbweStCU\";\r\n        }\r\n        axios.post(url, authenticationData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId)\r\n                dispatch(authenticationSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthenticationTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authenticationFailed(error.response.data.error));\r\n            })\r\n    };\r\n};\r\n\r\nexport const setAuthenticationRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTHENTICATION_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authenticationCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authenticationSuccess(token, userId));\r\n                dispatch(checkAuthenticationTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"; \r\nexport const PURCHASE_BURGER_SUCCES = \"PURCHASE_BURGER_SUCCES\";\r\nexport const PURCHASE_BURGER_FAILED = \"PURCHASE_BURGER_FAILED\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCES = \"FETCH_ORDERS_SUCCES\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTHENTICATION_START = \"AUTHENTICATION_START\";\r\nexport const AUTHENTICATION_SUCCES = \"AUTHENTICATION_SUCCESS\";\r\nexport const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\nexport const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\n\r\nexport const SET_AUTHENTICATION_REDIRECT_PATH = \"SET_AUTHENTICATION_REDIRECT_PATH\";","const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React from 'react';\r\nimport classes from './Logo.css';\r\n\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}> \r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuth ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        { !props.isAuth ? \r\n            <NavigationItem link=\"/authentication\">Authenticate</NavigationItem> \r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/> \r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuth={props.isAuthenticated} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n        <Auxiliary>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n                <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                    <nav>\r\n                        <NavigationItems isAuth={props.isAuthenticated}/>\r\n                    </nav>\r\n                </div>\r\n        </Auxiliary>\r\n    )\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Auxiliary>\r\n                <Toolbar \r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\r\n                    isAuthenticated={this.props.isAuth}/>\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}\r\n                    isAuthenticated={this.props.isAuth}/>\r\n                <main className={classes.Content}>\r\n                        {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.authentication.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\r\n\r\nimport classes from './BurgerIngredient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                    ingredient = <div className={classes.Meat}></div>;\r\n                    break;\r\n            case ('cheese'):\r\n                    ingredient = <div className={classes.Cheese}></div>;\r\n                    break;\r\n            case ('salad'):\r\n                    ingredient = <div className={classes.Salad}></div>;\r\n                    break;\r\n            case ('bacon'):\r\n                    ingredient = <div className={classes.Bacon}></div>\r\n                    break;\r\n                default:\r\n                    ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n           return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n              return <BurgerIngredient key={igKey + i} type={igKey}/>\r\n           })\r\n        }).reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, [])\r\n\r\n        if(transformedIngredients.length === 0) {\r\n            transformedIngredients = <p>Please start adding ingredients!</p>\r\n        }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.css';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientsAdded(ctrl.type)}\r\n                removed={() => props.ingredientsRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            onClick={props.ordered}\r\n            disabled={!props.purchasable}>{props.isAuthenticated ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.css';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // if(nextProps.show !== this.props.show) {\r\n        //     return true;\r\n        // }\r\n\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translatey(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ') }\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>{props.children}</button>\r\n)\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingredientsSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>\r\n                            {igKey}\r\n                        </span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n        })\r\n        return (\r\n            <Auxiliary>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientsSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to checkout?</p>\r\n            <Button clicked={this.props.purchaseCanceled} btnType=\"Danger\">CANCEL</Button>\r\n            <Button clicked={this.props.purchaseContinued} btnType=\"Success\">CONTINUE</Button>\r\n        </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount() {\r\n           this.requestInter = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            })\r\n           this.responseInter = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.requestInter);\r\n            axios.interceptors.response.eject(this.responseInter);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                    <Auxiliary>\r\n                        <Modal \r\n                            show={this.state.error}\r\n                            modalClosed={this.errorConfirmedHandler}>{this.state.error ? this.state.error.message : null}</Modal>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Auxiliary>\r\n            )\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n\r\n    //     };\r\n    // }\r\n    state = {\r\n       // ingredients: null,\r\n       // totalPrice: 4,\r\n       // purchasable: false,\r\n        purchasing: false,\r\n        // loading: false,\r\n        // error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n    };\r\n\r\n    updateStatePurchasable (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            }).reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n            return sum > 0;\r\n    };\r\n\r\n    purchasingHandler = () => {\r\n        if(this.props.isAuth) {\r\n            this.setState({purchasing: true})\r\n        } else {\r\n            this.props.onSetAuthenticationRedirectPath('/checkout');\r\n            this.props.history.push('/authentication');\r\n        }\r\n        \r\n    };\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ing\r\n        }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        \r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if(this.props.ing) {\r\n            burger = (\r\n                <Auxiliary>\r\n                    <Burger ingredients={this.props.ing} />\r\n                    <BuildControls \r\n                        ingredientsAdded = {this.props.onIngredientAdded}\r\n                        ingredientsRemoved = {this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        purchasing={this.state.purchasing}\r\n                        isAuthenticated={this.props.isAuth}\r\n                        ordered={this.purchasingHandler}\r\n                        purchasable={this.updateStatePurchasable(this.props.ing)}/>\r\n                </Auxiliary>\r\n                );\r\n                orderSummary = <OrderSummary \r\n                ingredients={this.props.ing}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}/>;\r\n            }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ing: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuth: state.authentication.token !== null\r\n    }\r\n    \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch (actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch (actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthenticationRedirectPath: (path) => dispatch(actions.setAuthenticationRedirectPath(path))\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://my-burger-app-react-de643.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n            }).catch(error => {\r\n                dispatch(fetchIngredientsFailed(error));\r\n            });\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSucces = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCES,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAILED,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSucces(response.data.name, orderData))\r\n        }).catch(error => {\r\n            dispatch(purchaseBurgerFailed(error))\r\n        });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSucces = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCES,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(response => {\r\n                const fetchedData = [];\r\n                for ( let key in response.data) {\r\n                    fetchedData.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSucces(fetchedData));\r\n            }).catch(error => {\r\n                dispatch(fetchOrdersFail(error))\r\n            })        \r\n    }\r\n}","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well</h1>\r\n            <div style={{width: \"100%\", margin: \"auto\"}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case ('input'): \r\n            inputElement = <input \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value}\r\n                                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value}\r\n                                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (<select \r\n                                className={inputClasses.join(' ')} \r\n                                value={props.value}\r\n                                onChange={props.changed}>\r\n                                {props.elementConfig.options.map(option => (\r\n                                    <option \r\n                                        key={option.value} \r\n                                        value={option.value}\r\n                                        >{option.displayValue}\r\n                                    </option>\r\n                                ))}\r\n                            </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value}\r\n                                onChange={props.changed}/>;\r\n    }\r\n\r\n    let validationError = null;\r\n        if (props.invalid && props.touched) {\r\n        validationError = <p>Please enter a valid value!</p>;\r\n}\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Forms/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n                name: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Your Name\"\r\n                    },\r\n                    value: \"\",\r\n                    validation: {\r\n                       required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                street: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Your Street\"\r\n                    },\r\n                    value: \"\",\r\n                    validation: {\r\n                       required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                zipCode: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Your Zip Code\"\r\n                    },\r\n                    value: \"\",\r\n                    validation: {\r\n                       required: true,\r\n                       minLength: 5,\r\n                       maxLength: 5\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                country: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Your Country\"\r\n                    },\r\n                    value: \"\",\r\n                    validation: {\r\n                       required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                }, \r\n                email: {\r\n                    elementType: \"email\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Your Email\"\r\n                    },\r\n                    value: \"\",\r\n                    validation: {\r\n                       required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                deliveryMethod: {\r\n                    elementType: \"select\",\r\n                    elementConfig: {\r\n                        options: [\r\n                            {value: 'fastest', displayValue: 'Fastest'},\r\n                            {value: 'cheapest', displayValue: \"Cheapest\"}\r\n                        ]\r\n                    },\r\n                    value: \"fastest\",\r\n                    validation: {},\r\n                    valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n        if(!rules) {\r\n            return true;   //Fixed bug in dropdown menu!\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ing,\r\n            price: this.props.price,\r\n            orderForm: formData,\r\n            userId: this.props.userId\r\n        };\r\n        this.props.onOrderBurger(order, this.props.token); \r\n    };\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n\r\n        const updatedOrderFormElement = {\r\n            ...this.state.orderForm[inputIdentifier]\r\n        };\r\n\r\n        updatedOrderFormElement.value = event.target.value;\r\n        updatedOrderFormElement.valid = this.checkValidation(updatedOrderFormElement.value, updatedOrderFormElement.validation);\r\n        updatedOrderFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedOrderFormElement;\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid =updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid}) \r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementArray.map(formElement => (\r\n                    <Input \r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            invalid={!formElement.config.valid}\r\n                            shouldValidate={formElement.config.validation}\r\n                            touched={formElement.config.touched}\r\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                             />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />\r\n        };\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your information</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ing: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.authentication.token,\r\n        userId: state.authentication.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace(\"/checkout/contact-data\")\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />;\r\n        if(this.props.ing) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ing}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route path={this.props.match.path + '/contact-data'} \r\n                            component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ing: state.burgerBuilder.ingredients,\r\n      //  price: state.burgerBuilder.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.css'\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ing => {\r\n        return <span style={{\r\n                        textTransform: \"capitalize\",\r\n                        display: \"inline-block\",\r\n                        margin: \"0 8px\",\r\n                        border: \"1px solid #ccc\",\r\n                        padding: \"6px\"\r\n                    }} key={ing.name}>{ing.name} ({ing.amount})</span>\r\n    });\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}/>\r\n                ))}\r\n        return (\r\n            <div>   \r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.authentication.token,\r\n        userId: state.authentication.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Forms/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Authentication.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Authentication extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"E-mail\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                   required: true,\r\n                   isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"password\",\r\n                    placeholder: \"Password\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                   required: true,\r\n                   minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(!this.props.buildingBurger && this.props.authenticationRedirectPath !== \"/\") {\r\n            this.props.onSetAuthenticationRedirectPath();\r\n        }\r\n    };\r\n\r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n        if(!rules) {\r\n            return true;   //Fixed bug in dropdown menu!\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidation(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        this.setState({controls: updatedControls})\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuthentication(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthenticationModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup: !prevState.isSignup\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        };\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ));\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authenticationRedirect = null;\r\n\r\n        if(this.props.isAuth) {\r\n           authenticationRedirect = <Redirect to={this.props.authenticationRedirectPath} />;\r\n        };\r\n\r\n        return (\r\n            <div className={classes.Authentication}>\r\n            {authenticationRedirect}\r\n            {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    clicked={this.switchAuthenticationModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.authentication.loading,\r\n        error: state.authentication.error,\r\n        isAuth: state.authentication.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authenticationRedirectPath: state.authentication.authenticationRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthentication: (email, password, isSignup) => dispatch(actions.authentication(email, password, isSignup)),\r\n        onSetAuthenticationRedirectPath: () => dispatch(actions.setAuthenticationRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Authentication from './containers/Authentication/Authentication';\nimport Logout from './containers/Authentication/Logout/Logout';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    let route = (\n      <Switch>\n        <Route path=\"/authentication\" component={Authentication} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if(this.props.isAuth) {\n      route = (\n        <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/authentication\" component={Authentication} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout>\n          {route}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.authentication.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authenticationCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENTS_PRICE = {\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.6,\r\n    meat: 0.9\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName],\r\n        building: true\r\n        }\r\n        return updateObject(state, updatedState)\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredient = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state,action);  \r\n        case actionTypes.SET_INGREDIENTS: return setIngredient(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n}\r\n\r\nconst purchaseBurgerSucces = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId});\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n};\r\n\r\nconst purchaseBurgerFailed = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst fetchOrdersSucces = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false});\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCES: return purchaseBurgerSucces(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAILED: return purchaseBurgerFailed(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCES: return fetchOrdersSucces(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        default:  return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n  \r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authenticationRedirectPath: \"/\"\r\n};\r\n\r\nconst autneticationStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true} );\r\n}\r\n\r\nconst authenticationSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authenticationFailed = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authenticationLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n};\r\n\r\nconst setAuthenticationRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authenticationRedirectPath: action.path\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTHENTICATION_START: return autneticationStart(state, action);\r\n        case actionTypes.AUTHENTICATION_SUCCES: return authenticationSuccess(state, action);\r\n        case actionTypes.AUTHENTICATION_FAILED: return authenticationFailed(state, action);\r\n        case actionTypes.AUTHENTICATION_LOGOUT: return authenticationLogout(state, action);\r\n        case actionTypes.SET_AUTHENTICATION_REDIRECT_PATH: return setAuthenticationRedirectPath(state, action);\r\n        default: return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authenticationReducer from './store/reducers/authentication';\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    authentication: authenticationReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Salad\":\"BurgerIngredient__Salad__2WBlr\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__3KZA4\",\"Label\":\"Input__Label__3b4qG\",\"InputElement\":\"Input__InputElement__CFNax\",\"Invalid\":\"Input__Invalid__3_Ybq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3KSp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load4\":\"Spinner__load4__10vDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Authentication__Authentication__2S7ej\"};"],"sourceRoot":""}